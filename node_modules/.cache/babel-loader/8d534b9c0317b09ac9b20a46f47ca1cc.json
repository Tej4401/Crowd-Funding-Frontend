{"ast":null,"code":"var _jsxFileName = \"/home/albert/Downloads/Crowd_funding-app-using-brownie-and-react/front_end/src/components/Main.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable spaced-comment */\n/// <reference types=\"react-scripts\" />\nimport { useEthers } from \"@usedapp/core\";\nimport helperConfig from \"../helper-config.json\";\nimport networkMapping from \"../chain-info/deployments/map.json\";\nimport brownieConfig from \"../brownie-config.json\";\nimport dapp from \"../dapp.png\";\nimport eth from \"../eth.png\";\nimport dai from \"../dai.png\";\nimport { YourWallet } from \"./yourWallet\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { constants } from \"ethers\";\nimport { FundWallet } from \"./FundWallet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  title: {\n    color: theme.palette.common.white,\n    textAlign: \"center\",\n    padding: theme.spacing(4)\n  }\n}));\nexport const Main = () => {\n  _s();\n\n  // Show token values from the wallet\n  // Get the address of different tokens\n  // Get the balance of the users wallet\n  // send the brownie-config to our `src` folder\n  // send the build folder\n  const classes = useStyles();\n  const {\n    chainId,\n    error\n  } = useEthers();\n  const networkName = chainId ? helperConfig[chainId] : \"dev\";\n  let stringChainId = String(chainId);\n  const tokenFarmAddress = chainId ? networkMapping[String(chainId)][\"TokenFarm\"][0] : constants.AddressZero;\n  const dappTokenAddress = chainId ? networkMapping[stringChainId][\"DappToken\"][0] : constants.AddressZero; //----\n\n  const wethTokenAddress = chainId ? brownieConfig[\"networks\"][networkName][\"weth_token\"] : constants.AddressZero; //    :--> brownie config\n\n  const fauTokenAddress = chainId ? brownieConfig[\"networks\"][networkName][\"fau_token\"] : constants.AddressZero; //----\n\n  const supportedTokens = [{\n    image: dapp,\n    address: dappTokenAddress,\n    name: \"GIFT\"\n  }, {\n    image: eth,\n    address: wethTokenAddress,\n    name: \"WETH\"\n  }, {\n    image: dai,\n    address: fauTokenAddress,\n    name: \"DAI\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FundWallet, {\n      supportedTokens: supportedTokens\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 56\n    }, this), /*#__PURE__*/_jsxDEV(YourWallet, {\n      supportedTokens: supportedTokens\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"hC6Gcf1Ne8SRwEBIrUn4Pax4KaU=\", false, function () {\n  return [useStyles, useEthers];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/albert/Downloads/Crowd_funding-app-using-brownie-and-react/front_end/src/components/Main.tsx"],"names":["useEthers","helperConfig","networkMapping","brownieConfig","dapp","eth","dai","YourWallet","makeStyles","constants","FundWallet","useStyles","theme","title","color","palette","common","white","textAlign","padding","spacing","Main","classes","chainId","error","networkName","stringChainId","String","tokenFarmAddress","AddressZero","dappTokenAddress","wethTokenAddress","fauTokenAddress","supportedTokens","image","address","name"],"mappings":";;;AAAA;AACA;AACA,SAASA,SAAT,QAA0B,eAA1B;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAQA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAEF,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBC,KADzB;AAEHC,IAAAA,SAAS,EAAE,QAFR;AAGHC,IAAAA,OAAO,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;AAHN;AAD8B,CAAZ,CAAD,CAA5B;AAQA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACtB;AACA;AACA;AAEA;AACA;AACA,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAM;AAAEY,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAqBxB,SAAS,EAApC;AACA,QAAMyB,WAAW,GAAGF,OAAO,GAAGtB,YAAY,CAACsB,OAAD,CAAf,GAA2B,KAAtD;AACA,MAAIG,aAAa,GAAGC,MAAM,CAACJ,OAAD,CAA1B;AACA,QAAMK,gBAAgB,GAAGL,OAAO,GAAGrB,cAAc,CAACyB,MAAM,CAACJ,OAAD,CAAP,CAAd,CAAgC,WAAhC,EAA6C,CAA7C,CAAH,GAAqDd,SAAS,CAACoB,WAA/F;AACA,QAAMC,gBAAgB,GAAGP,OAAO,GAAGrB,cAAc,CAACwB,aAAD,CAAd,CAA8B,WAA9B,EAA2C,CAA3C,CAAH,GAAmDjB,SAAS,CAACoB,WAA7F,CAZsB,CAY0F;;AAChH,QAAME,gBAAgB,GAAGR,OAAO,GAAGpB,aAAa,CAAC,UAAD,CAAb,CAA0BsB,WAA1B,EAAuC,YAAvC,CAAH,GAA0DhB,SAAS,CAACoB,WAApG,CAbsB,CAa0F;;AAChH,QAAMG,eAAe,GAAGT,OAAO,GAAGpB,aAAa,CAAC,UAAD,CAAb,CAA0BsB,WAA1B,EAAuC,WAAvC,CAAH,GAAyDhB,SAAS,CAACoB,WAAlG,CAdsB,CAc0F;;AAEhH,QAAMI,eAA6B,GAAG,CAClC;AACIC,IAAAA,KAAK,EAAE9B,IADX;AAEI+B,IAAAA,OAAO,EAAEL,gBAFb;AAGIM,IAAAA,IAAI,EAAE;AAHV,GADkC,EAMlC;AACIF,IAAAA,KAAK,EAAE7B,GADX;AAEI8B,IAAAA,OAAO,EAAEJ,gBAFb;AAGIK,IAAAA,IAAI,EAAE;AAHV,GANkC,EAWlC;AACIF,IAAAA,KAAK,EAAE5B,GADX;AAEI6B,IAAAA,OAAO,EAAEH,eAFb;AAGII,IAAAA,IAAI,EAAE;AAHV,GAXkC,CAAtC;AAkBA,sBAAQ;AAAA,4BACJ,QAAC,UAAD;AAAY,MAAA,eAAe,EAAEH;AAA7B;AAAA;AAAA;AAAA;AAAA,YADI,eAC2C;AAAA;AAAA;AAAA;AAAA,YAD3C,eAEJ,QAAC,UAAD;AAAY,MAAA,eAAe,EAAEA;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFI;AAAA,kBAAR;AAIH,CAtCM;;GAAMZ,I;UAOOV,S,EACWX,S;;;KARlBqB,I","sourcesContent":["/* eslint-disable spaced-comment */\n/// <reference types=\"react-scripts\" />\nimport { useEthers } from \"@usedapp/core\"\nimport helperConfig from \"../helper-config.json\"\nimport networkMapping from \"../chain-info/deployments/map.json\"\nimport brownieConfig from \"../brownie-config.json\"\nimport dapp from \"../dapp.png\"\nimport eth from \"../eth.png\"\nimport dai from \"../dai.png\"\nimport { YourWallet } from \"./yourWallet\"\nimport { makeStyles } from \"@material-ui/core\"\nimport { constants } from \"ethers\"\nimport { FundWallet } from \"./FundWallet\"\n\nexport type Token = {\n    image: string\n    address: string\n    name: string\n}\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.common.white,\n        textAlign: \"center\",\n        padding: theme.spacing(4)\n    }\n}))\n\nexport const Main = () => {\n    // Show token values from the wallet\n    // Get the address of different tokens\n    // Get the balance of the users wallet\n\n    // send the brownie-config to our `src` folder\n    // send the build folder\n    const classes = useStyles()\n    const { chainId, error } = useEthers()\n    const networkName = chainId ? helperConfig[chainId] : \"dev\"\n    let stringChainId = String(chainId)\n    const tokenFarmAddress = chainId ? networkMapping[String(chainId)][\"TokenFarm\"][0] : constants.AddressZero\n    const dappTokenAddress = chainId ? networkMapping[stringChainId][\"DappToken\"][0] : constants.AddressZero        //----\n    const wethTokenAddress = chainId ? brownieConfig[\"networks\"][networkName][\"weth_token\"] : constants.AddressZero //    :--> brownie config\n    const fauTokenAddress = chainId ? brownieConfig[\"networks\"][networkName][\"fau_token\"] : constants.AddressZero   //----\n\n    const supportedTokens: Array<Token> = [\n        {\n            image: dapp,\n            address: dappTokenAddress,\n            name: \"GIFT\"\n        },\n        {\n            image: eth,\n            address: wethTokenAddress,\n            name: \"WETH\"\n        },\n        {\n            image: dai,\n            address: fauTokenAddress,\n            name: \"DAI\"\n        }\n    ]\n\n    return (<>\n        <FundWallet supportedTokens={supportedTokens}/><br />\n        <YourWallet supportedTokens={supportedTokens} />\n    </>)\n}"]},"metadata":{},"sourceType":"module"}