{"ast":null,"code":"var _jsxFileName = \"/home/albert/Downloads/Crowd_funding-app-using-brownie-and-react/front_end/src/components/yourWallet/EthWalletBalance.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEtherBalance } from \"@usedapp/core\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { BalanceMsg } from \"../BalanceMsg\";\nimport eth from \"../../eth.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EthWalletBalance = _ref => {\n  _s();\n\n  let {\n    account\n  } = _ref;\n  const etherBalance = useEtherBalance(account);\n  const formattedetherBalance = etherBalance ? parseFloat(formatUnits(etherBalance, 18)) : 0;\n  return /*#__PURE__*/_jsxDEV(BalanceMsg, {\n    label: `Current ETH wallet balance : `,\n    tokenImgSrc: eth,\n    amount: formattedetherBalance\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 13\n  }, this);\n};\n\n_s(EthWalletBalance, \"poubAnPeI8sybUoj0Y2t3lgw4Ow=\", false, function () {\n  return [useEtherBalance];\n});\n\n_c = EthWalletBalance;\n\nvar _c;\n\n$RefreshReg$(_c, \"EthWalletBalance\");","map":{"version":3,"sources":["/home/albert/Downloads/Crowd_funding-app-using-brownie-and-react/front_end/src/components/yourWallet/EthWalletBalance.tsx"],"names":["useEtherBalance","formatUnits","BalanceMsg","eth","EthWalletBalance","account","etherBalance","formattedetherBalance","parseFloat"],"mappings":";;;AAAA,SAAoBA,eAApB,QAA2C,eAA3C;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AAMA,OAAO,MAAMC,gBAAgB,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;AACrD,QAAMC,YAAY,GAAGN,eAAe,CAACK,OAAD,CAApC;AACA,QAAME,qBAA6B,GAAGD,YAAY,GAAGE,UAAU,CAACP,WAAW,CAACK,YAAD,EAAe,EAAf,CAAZ,CAAb,GAA+C,CAAjG;AACA,sBAAQ,QAAC,UAAD;AACJ,IAAA,KAAK,EAAG,+BADJ;AAEJ,IAAA,WAAW,EAAEH,GAFT;AAGJ,IAAA,MAAM,EAAEI;AAHJ;AAAA;AAAA;AAAA;AAAA,UAAR;AAIH,CAPM;;GAAMH,gB;UACYJ,e;;;KADZI,gB","sourcesContent":["import { useEthers, useEtherBalance } from \"@usedapp/core\"\nimport { formatUnits } from \"@ethersproject/units\"\nimport { BalanceMsg } from \"../BalanceMsg\"\nimport eth from \"../../eth.png\";\n\nexport interface Props {\n    account: string\n}\n\nexport const EthWalletBalance = ({ account }: Props ) => {\n    const etherBalance = useEtherBalance(account);\n    const formattedetherBalance: number = etherBalance ? parseFloat(formatUnits(etherBalance, 18)) : 0\n    return (<BalanceMsg\n        label={`Current ETH wallet balance : `}\n        tokenImgSrc={eth}\n        amount={formattedetherBalance} />)\n}"]},"metadata":{},"sourceType":"module"}